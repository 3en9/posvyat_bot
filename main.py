import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from functions import get_values, send_message, send_message_to_chat
from init import get_users
from table_parser import mailing


def main():
    token, group_id, chat_id = get_values()
    admins_id = get_users()
    hi_message = '–ü—Ä–∏–≤–µ—Ç ‚ú®\n–≠—Ç–æ –±–æ—Ç –ü–æ—Å–≤—è—â–µ–Ω–∏—è –≤ —Å—Ç—É–¥–µ–Ω—Ç—ã 2023\n–ó–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ üå±\n–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –ñ–∞—Ç–≤–µ üî•'
    try:
        vk_session = vk_api.VkApi(token=token)
        longpoll = VkBotLongPoll(vk_session, group_id)
    except Exception as ex:
        print('–û—à–∏–±–∫–∞', ex)
        exit(-1)

    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:
            user_id = event.obj.message['from_id']
            message = event.obj.message['text'].strip()
            if message:
                if message.lower() == '–Ω–∞—á–∞—Ç—å' or message.lower() == '–ø—Ä–∏–≤–µ—Ç':
                    send_message(user_id, hi_message)
                elif message[0] == '/':
                    try:
                        lst = message.split()
                        if lst[0] == '/send_message' and user_id in admins_id:
                            table = lst[1]
                            cell = lst[2]
                            value = lst[3]
                            m = ' '.join(lst[4:])
                            # print(m)
                            a = mailing(table, cell, value, m)
                            if type(a) == list:
                                send_message(user_id, '–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞')
                                if a:
                                    response = ''
                                    for i in a:
                                        response += i+'\n'
                                    send_message(user_id, f'–ü–æ –∫–∞–∫–∏–º —Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞(—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ –∑–∞—à–ª–∏ –≤ –±–æ—Ç–∞): {response}')
                            else:
                                send_message(user_id, '–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏')

                    except Exception as ex:
                        send_message(user_id, '–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏')
                        print(ex)
                else:
                    # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É
                    send_message_to_chat(message, user_id)


if __name__ == '__main__':
    main()
